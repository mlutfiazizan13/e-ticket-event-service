spring.application.name=event-service
server.port=8091

#JPA CONFIG
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.aop.proxy-target-class=true
spring.jpa.properties.hibernate.column_ordering_strategy=legacy

#REGISTER TO EUREKA
eureka.instance.appname=${EUREKA_APPNAME:event-service}
eureka.instance.instanceId=${spring.application.name}:${spring.application.instance-id:${random.value}}
eureka.instance.preferIpAddress= true
eureka.instance.ipAddress=${EUREKA_HOST:127.0.0.1}
eureka.instance.hostname= ${EUREKA_HOSTNAME:event-service}
eureka.instance.health-check-url-path= /actuator/health
eureka.instance.metadata-map.startup= ${random.int}
eureka.client.serviceUrl.defaultZone=http://${EUREKA_SEC:}${EUREKA_HOST:127.0.0.1}:8761/eureka

#DATABASE CONFIG
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/e_ticket_event
spring.datasource.username=postgres
spring.datasource.password=
spring.jpa.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

#KAFKA CONFIG
spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.kafka.consumer.group-id=_confluent-controlcenter-7-7-0-1
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


